import telebot
from telebot import types
import dictionary_options as dw

translation = False
add_new_word = False
replace_word = False
delete_word = False

API_TOKEN = 'your_token'
bot = telebot.TeleBot(API_TOKEN)

@bot.message_handler(commands=['start'])
def button_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton("–ü–µ—Ä–µ–≤–µ—Å—Ç–∏")
    button2 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ")
    button3 = types.KeyboardButton("–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤ –∏–∑—É—á–µ–Ω–Ω–æ–µ")
    button4 = types.KeyboardButton("–ü—Ä–æ–≥—Ä–µ—Å—Å")
    button5 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ")
    markup.add(button1, button2, button3, button4, button5)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—éüëã –Ø –±—É–¥—É —Ö—Ä–∞–Ω–∏—Ç—å –≤–∞—à –ª–∏—á–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –∏ –ø–æ–º–æ–≥–∞—Ç—å –≤ –∏–∑—É—á–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö —Å–ª–æ–≤.\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def message_reply(message):
    global translation
    global add_new_word
    global replace_word
    global text
    global delete_word

    if message.text =="–ü–µ—Ä–µ–≤–µ—Å—Ç–∏":
        translation = True
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ")
        
    elif translation:
        bot.send_message(message.chat.id, f'{dw.get_transslate(message.text)}')
        text = message.text
        result = dw.get_transslate(message.text)
        if result == '–û—à–∏–±–∫–∞':
            bot.send_message(message.chat.id, f'–¢–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞ –Ω–µ—Ç –≤ —Å–ª–æ–≤–∞—Ä–µ')
            translation = False
        else:
            markup = types.InlineKeyboardMarkup(row_width=2)
            addbutton1 = types.InlineKeyboardButton('–î–∞', callback_data='synonyms')
            addbutton2 = types.InlineKeyboardButton('–ù–µ –Ω–∞–¥–æ, —è –≤—Å–µ –ø–æ–º–Ω—é', callback_data='ok')
            markup.add(addbutton1, addbutton2)
            bot.send_message(message.chat.id, f'–ü–æ–∫–∞–∑–∞—Ç—å —Å–∏–Ω–æ–Ω–∏–º—ã —Å–ª–æ–≤–∞?', parse_mode= "Markdown", reply_markup=markup)
            translation = False

    if message.text =="–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ":
        delete_word = True
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å")
        
    elif delete_word:
        bot.send_message(message.chat.id, f'{dw.delete_word(message.text)}')
        delete_word = False

    if message.text =="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ":
        add_new_word = True
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ –∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º")
    elif add_new_word:
        bot.send_message(message.chat.id, f'{dw.add_word(message.text)}')
        add_new_word = False

    if message.text =="–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤ –∏–∑—É—á–µ–Ω–Ω–æ–µ":
        replace_word = True
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –≤—ã—É—á–∏–ª–∏ –∏ –æ–Ω–æ –±—É–¥–µ—Ç –ø–µ—Ä–µ–º–µ—â–µ–Ω–æ –≤ –≤–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è")
    elif replace_word:
        bot.send_message(message.chat.id, f'{dw.replace_word(message.text)}')
        replace_word = False

    if message.text =="–ü—Ä–æ–≥—Ä–µ—Å—Å":
        markup = types.InlineKeyboardMarkup(row_width=3)
        progressbutton1 = types.InlineKeyboardButton('–°–ª–æ–≤ –∏–∑—É—á–µ–Ω–æ', callback_data='wel_done')
        progressbutton2 = types.InlineKeyboardButton('–ò–∑—É—á–∞—é —Å–µ–π—á–∞—Å', callback_data='in_process')
        progressbutton3 = types.InlineKeyboardButton('–ß—Ç–æ —É–∂–µ –≤—ã—É—á–µ–Ω–æ', callback_data='learned')
        markup.add(progressbutton1, progressbutton2, progressbutton3)
        bot.send_message(message.chat.id, '–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ –∏–∑—É—á–µ–Ω–∏–∏ —Å–ª–æ–≤.\n–°–∫–æ–ª—å–∫–æ –∏ –∫–∞–∫–∏–µ —Å–ª–æ–≤–∞ —É–∂–µ –∏–∑—É—á–µ–Ω—ã, –∞ —Ç–∞–∫–∂–µ —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –∏–∑—É—á–∞–µ–º—ã—Ö —Å–ª–æ–≤', reply_markup=markup)


@bot.callback_query_handler(func = lambda call: True)
def callback(call):   
    if call.message:
        
        if call.data == 'synonyms':
            global text
            bot.send_message(call.message.chat.id, f' {dw.get_synonym(text)}')

        elif call.data == 'ok':
            bot.send_message(call.message.chat.id, 'üëç')

        elif call.data == 'wel_done':
            dictionary = 'done.json'
            bot.send_message(call.message.chat.id, f'–í—Å–µ–≥–æ —Å–ª–æ–≤ –≤—ã—É—á–µ–Ω–æ: {dw.get_count_words(dictionary)}')

        elif call.data == 'in_process':
            dictionary = 'learning.json'
            bot.send_message(call.message.chat.id, f'–ò–∑—É—á–∞–µ–º —Å–ª–æ–≤–∞:\n{dw.get_words_in_process(dictionary)}')

        elif call.data == 'learned':
            dictionary = 'done.json'
            bot.send_message(call.message.chat.id, f'–í—ã—É—á–µ–Ω–æ:\n{dw.get_words_in_process(dictionary)}')


bot.polling()

